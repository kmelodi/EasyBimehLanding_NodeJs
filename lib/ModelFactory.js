/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModelUpload = require('../lib/Models/BaseModelUpload');
const Upload = require('../lib/Models/Upload');
const BaseModelLiabilityDoctorInsurance =
  require('../lib/Models/BaseModelLiabilityDoctorInsurance');
const LiabilityDoctorInsurance = require('../lib/Models/LiabilityDoctorInsurance');
const ActivityArea = require('../lib/Models/ActivityArea');
const Expertise = require('../lib/Models/Expertise');
const CommitmentCeiling = require('../lib/Models/CommitmentCeiling');
const InsuranceCompany = require('../lib/Models/InsuranceCompany');
const InsuranceRiskLevel = require('../lib/Models/InsuranceRiskLevel');
const InsurancePolicyTerm = require('../lib/Models/InsurancePolicyTerm');
const Province = require('../lib/Models/Province');
const ShippingType = require('../lib/Models/ShippingType');
const PostType = require('../lib/Models/PostType');
const InsurancePolicyCondition = require('../lib/Models/InsurancePolicyCondition');
const InsuranceDataLiabilityDoctorInsurance =
  require('../lib/Models/InsuranceDataLiabilityDoctorInsurance');
const LiabilityDoctorInsurancePolicyExtendView =
  require('../lib/Models/LiabilityDoctorInsurancePolicyExtendView');
const LiabilityDoctorInsurancePolicyFilter =
  require('../lib/Models/LiabilityDoctorInsurancePolicyFilter');
const BaseModelMedicalSpecialties = require('../lib/Models/BaseModelMedicalSpecialties');
const ComboDataModel = require('../lib/Models/ComboDataModel');
const CarBrand = require('../lib/Models/CarBrand');
const BaseModelElectronicEquipmentInsurance =
  require('../lib/Models/BaseModelElectronicEquipmentInsurance');
const CarBrandTips = require('../lib/Models/CarBrandTips');
const CarBrandTipsModel = require('../lib/Models/CarBrandTipsModel');
const HasPlan = require('../lib/Models/HasPlan');
const ElectronicEquipmentInsurance = require('../lib/Models/ElectronicEquipmentInsurance');
const Franchisee = require('../lib/Models/Franchisee');
const DeviceType = require('../lib/Models/DeviceType');
const InsuranceData = require('../lib/Models/InsuranceData');
const ElectronicEquipmentInsurancePolicyExtendView =
  require('../lib/Models/ElectronicEquipmentInsurancePolicyExtendView');
const ElectronicEquipmentInsurancePolicyFilter =
  require('../lib/Models/ElectronicEquipmentInsurancePolicyFilter');
const BaseModelDeviceBrandTypes = require('../lib/Models/BaseModelDeviceBrandTypes');
const DeviceBrandTypes = require('../lib/Models/DeviceBrandTypes');
const BaseModelDiviceFranchisee = require('../lib/Models/BaseModelDiviceFranchisee');
const DiviceFranchisee = require('../lib/Models/DiviceFranchisee');
const OtherInsuranceTypes = require('../lib/Models/OtherInsuranceTypes');
const SendSmsToken = require('../lib/Models/SendSmsToken');
const ExtraData = require('../lib/Models/ExtraData');
const Status200 = require('../lib/Models/Status200');
const GetAccessTokenUserInfo = require('../lib/Models/GetAccessTokenUserInfo');
const Exception = require('../lib/Models/Exception');
const TargetSite = require('../lib/Models/TargetSite');
const CarBrands = require('../lib/Models/CarBrands');
const RiskLevel = require('../lib/Models/RiskLevel');
const CarUses = require('../lib/Models/CarUses');
const BaseModelFireInsurance = require('../lib/Models/BaseModelFireInsurance');
const FireInsurance = require('../lib/Models/FireInsurance');
const InsuranceExtraCoverage = require('../lib/Models/InsuranceExtraCoverage');
const InsuranceExtraCoverageExtraData = require('../lib/Models/InsuranceExtraCoverageExtraData');
const EverySquareMeterCoverage = require('../lib/Models/EverySquareMeterCoverage');
const InsuranceDataFireInsurance = require('../lib/Models/InsuranceDataFireInsurance');
const FireInsurancePolicyExtendView = require('../lib/Models/FireInsurancePolicyExtendView');
const FireInsurancePolicyFilter = require('../lib/Models/FireInsurancePolicyFilter');
const BaseModelEarthquake = require('../lib/Models/BaseModelEarthquake');
const Earthquake = require('../lib/Models/Earthquake');
const BaseModelTravelInsurance = require('../lib/Models/BaseModelTravelInsurance');
const TravelInsurance = require('../lib/Models/TravelInsurance');
const Zone = require('../lib/Models/Zone');
const TravelDuration = require('../lib/Models/TravelDuration');
const TravelAge = require('../lib/Models/TravelAge');
const InsuranceDataTravelInsurance = require('../lib/Models/InsuranceDataTravelInsurance');
const TravelInsurancePolicyExtendView = require('../lib/Models/TravelInsurancePolicyExtendView');
const TravelInsurancePolicyExtend = require('../lib/Models/TravelInsurancePolicyExtend');
const TravelInsurancePolicyFilter = require('../lib/Models/TravelInsurancePolicyFilter');
const BaseModelElevatorInsurance = require('../lib/Models/BaseModelElevatorInsurance');
const ElevatorInsurance = require('../lib/Models/ElevatorInsurance');
const ElevatorType = require('../lib/Models/ElevatorType');
const DefectOrganCoverage = require('../lib/Models/DefectOrganCoverage');
const DeathCapitalCoverage = require('../lib/Models/DeathCapitalCoverage');
const FinancialCoverage = require('../lib/Models/FinancialCoverage');
const MedicalCostCoverage = require('../lib/Models/MedicalCostCoverage');
const InsuranceDataElevatorInsurance = require('../lib/Models/InsuranceDataElevatorInsurance');
const ElevatorInsurancePolicyExtendView =
  require('../lib/Models/ElevatorInsurancePolicyExtendView');
const ElevatorInsurancePolicyFilter = require('../lib/Models/ElevatorInsurancePolicyFilter');
const BaseModelPortalLandingPage = require('../lib/Models/BaseModelPortalLandingPage');
const PortalLandingPage = require('../lib/Models/PortalLandingPage');
const InsuranceGroup = require('../lib/Models/InsuranceGroup');
const SummaryCard = require('../lib/Models/SummaryCard');
const SummaryNotic = require('../lib/Models/SummaryNotic');
const ImageAlbum = require('../lib/Models/ImageAlbum');
const PopupImageGalleryie = require('../lib/Models/PopupImageGalleryie');
const GalleryDetail = require('../lib/Models/GalleryDetail');
const VideoGallery = require('../lib/Models/VideoGallery');
const InsuranceCentre = require('../lib/Models/InsuranceCentre');
const InsuranceCentrePortal = require('../lib/Models/InsuranceCentrePortal');
const ExtraDataBaseModelPortalLandingPage =
  require('../lib/Models/ExtraDataBaseModelPortalLandingPage');
const BaseModelInsuranceCentrePolicyTypes =
  require('../lib/Models/BaseModelInsuranceCentrePolicyTypes');
const InsuranceCentrePolicyTypes = require('../lib/Models/InsuranceCentrePolicyTypes');
const ExtraDataBaseModelInsuranceCentrePolicyTypes =
  require('../lib/Models/ExtraDataBaseModelInsuranceCentrePolicyTypes');
const BaseModelDamageType = require('../lib/Models/BaseModelDamageType');
const DamageType = require('../lib/Models/DamageType');
const InsuranceTypes = require('../lib/Models/InsuranceTypes');
const InsuranceCompanies = require('../lib/Models/InsuranceCompanies');
const BaseModelTrakingCode = require('../lib/Models/BaseModelTrakingCode');
const TrackingCode = require('../lib/Models/TrackingCode');
const TrackingDamageStatusTrackingCode = require('../lib/Models/TrackingDamageStatusTrackingCode');
const TrackingDamageFileTrackinCode = require('../lib/Models/TrackingDamageFileTrackinCode');
const TrackingDamageRequest = require('../lib/Models/TrackingDamageRequest');
const TrackingDamageStatus = require('../lib/Models/TrackingDamageStatus');
const TrackingDamageFile = require('../lib/Models/TrackingDamageFile');
const TrackingDamage = require('../lib/Models/TrackingDamage');
const BaseModelStatusStatusCollections = require('../lib/Models/BaseModelStatusStatusCollections');
const StatusStatusCollections = require('../lib/Models/StatusStatusCollections');
const BaseModelStatus = require('../lib/Models/BaseModelStatus');
const Status = require('../lib/Models/Status');
const BaseModelPortalLandingContactAbout =
  require('../lib/Models/BaseModelPortalLandingContactAbout');
const PortalLandingContactAbout = require('../lib/Models/PortalLandingContactAbout');
const InsuranceCentreData = require('../lib/Models/InsuranceCentreData');
const BaseModelFaqInsuranceCentre = require('../lib/Models/BaseModelFaqInsuranceCentre');
const FaqInsuranceCentre = require('../lib/Models/FaqInsuranceCentre');
const BaseModelInsurancePolicyTracking = require('../lib/Models/BaseModelInsurancePolicyTracking');
const InsurancePolicyTracking = require('../lib/Models/InsurancePolicyTracking');
const BaseModelSpecialPlan = require('../lib/Models/BaseModelSpecialPlan');
const SpecialPlan = require('../lib/Models/SpecialPlan');
const ExtraDataBaseModelSpecialPlan = require('../lib/Models/ExtraDataBaseModelSpecialPlan');
const CarBrandModel = require('../lib/Models/CarBrandModel');
const Status400Exception = require('../lib/Exceptions/Status400Exception');
const InternalServerErrorException = require('../lib/Exceptions/InternalServerErrorException');

const classMap = {
    BaseModelUpload,
    Upload,
    BaseModelLiabilityDoctorInsurance,
    LiabilityDoctorInsurance,
    ActivityArea,
    Expertise,
    CommitmentCeiling,
    InsuranceCompany,
    InsuranceRiskLevel,
    InsurancePolicyTerm,
    Province,
    ShippingType,
    PostType,
    InsurancePolicyCondition,
    InsuranceDataLiabilityDoctorInsurance,
    LiabilityDoctorInsurancePolicyExtendView,
    LiabilityDoctorInsurancePolicyFilter,
    BaseModelMedicalSpecialties,
    ComboDataModel,
    CarBrand,
    BaseModelElectronicEquipmentInsurance,
    CarBrandTips,
    CarBrandTipsModel,
    HasPlan,
    ElectronicEquipmentInsurance,
    Franchisee,
    DeviceType,
    InsuranceData,
    ElectronicEquipmentInsurancePolicyExtendView,
    ElectronicEquipmentInsurancePolicyFilter,
    BaseModelDeviceBrandTypes,
    DeviceBrandTypes,
    BaseModelDiviceFranchisee,
    DiviceFranchisee,
    OtherInsuranceTypes,
    SendSmsToken,
    ExtraData,
    Status200,
    GetAccessTokenUserInfo,
    Exception,
    TargetSite,
    CarBrands,
    RiskLevel,
    CarUses,
    BaseModelFireInsurance,
    FireInsurance,
    InsuranceExtraCoverage,
    InsuranceExtraCoverageExtraData,
    EverySquareMeterCoverage,
    InsuranceDataFireInsurance,
    FireInsurancePolicyExtendView,
    FireInsurancePolicyFilter,
    BaseModelEarthquake,
    Earthquake,
    BaseModelTravelInsurance,
    TravelInsurance,
    Zone,
    TravelDuration,
    TravelAge,
    InsuranceDataTravelInsurance,
    TravelInsurancePolicyExtendView,
    TravelInsurancePolicyExtend,
    TravelInsurancePolicyFilter,
    BaseModelElevatorInsurance,
    ElevatorInsurance,
    ElevatorType,
    DefectOrganCoverage,
    DeathCapitalCoverage,
    FinancialCoverage,
    MedicalCostCoverage,
    InsuranceDataElevatorInsurance,
    ElevatorInsurancePolicyExtendView,
    ElevatorInsurancePolicyFilter,
    BaseModelPortalLandingPage,
    PortalLandingPage,
    InsuranceGroup,
    SummaryCard,
    SummaryNotic,
    ImageAlbum,
    PopupImageGalleryie,
    GalleryDetail,
    VideoGallery,
    InsuranceCentre,
    InsuranceCentrePortal,
    ExtraDataBaseModelPortalLandingPage,
    BaseModelInsuranceCentrePolicyTypes,
    InsuranceCentrePolicyTypes,
    ExtraDataBaseModelInsuranceCentrePolicyTypes,
    BaseModelDamageType,
    DamageType,
    InsuranceTypes,
    InsuranceCompanies,
    BaseModelTrakingCode,
    TrackingCode,
    TrackingDamageStatusTrackingCode,
    TrackingDamageFileTrackinCode,
    TrackingDamageRequest,
    TrackingDamageStatus,
    TrackingDamageFile,
    TrackingDamage,
    BaseModelStatusStatusCollections,
    StatusStatusCollections,
    BaseModelStatus,
    Status,
    BaseModelPortalLandingContactAbout,
    PortalLandingContactAbout,
    InsuranceCentreData,
    BaseModelFaqInsuranceCentre,
    FaqInsuranceCentre,
    BaseModelInsurancePolicyTracking,
    InsurancePolicyTracking,
    BaseModelSpecialPlan,
    SpecialPlan,
    ExtraDataBaseModelSpecialPlan,
    CarBrandModel,
    Status400Exception,
    InternalServerErrorException,
};

/**
 * Factory class to create instances of models and exception classes
 */
class ModelFactory {
    /**
     * Creates instance of a model class
     * @param  modelName  {string}  Name of class to instantiate
     * @returns  {object} Instance of the model class
     */
    static getInstance(modelName) {
        return new classMap[modelName]();
    }
}

module.exports = ModelFactory;
