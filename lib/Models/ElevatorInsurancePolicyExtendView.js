/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ElevatorInsurancePolicyExtendView
 */
class ElevatorInsurancePolicyExtendView extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.buildingUseTypeParamId = this.constructor.getValue(obj.buildingUseTypeParamId);
        this.elevatorTypeParamId = this.constructor.getValue(obj.elevatorTypeParamId);
        this.floors = this.constructor.getValue(obj.floors);
        this.elevatorCapacity = this.constructor.getValue(obj.elevatorCapacity);
        this.elevatorCapacityCargo = this.constructor.getValue(obj.elevatorCapacityCargo);
        this.defectOrganCoverageId = this.constructor.getValue(obj.defectOrganCoverageId);
        this.deathCapitalCoverageId = this.constructor.getValue(obj.deathCapitalCoverageId);
        this.financialCoverageId = this.constructor.getValue(obj.financialCoverageId);
        this.medicalCostCoverageId = this.constructor.getValue(obj.medicalCostCoverageId);
        this.riskLevelDiscountRate = this.constructor.getValue(obj.riskLevelDiscountRate);
        this.insuranceRiskLevelId = this.constructor.getValue(obj.insuranceRiskLevelId);
        this.discountRate = this.constructor.getValue(obj.discountRate);
        this.cityId = this.constructor.getValue(obj.cityId);
        this.provinceId = this.constructor.getValue(obj.provinceId);
        this.zipCode = this.constructor.getValue(obj.zipCode);
        this.addressPlaceBuilding = this.constructor.getValue(obj.addressPlaceBuilding);
        this.ownerCoverage = this.constructor.getValue(obj.ownerCoverage);
        this.riskLevelDiscount = this.constructor.getValue(obj.riskLevelDiscount);
        this.basePremium = this.constructor.getValue(obj.basePremium);
        this.allPremium = this.constructor.getValue(obj.allPremium);
        this.insuranceCompanyDiscountRate =
          this.constructor.getValue(obj.insuranceCompanyDiscountRate);
        this.insuranceCompanyDiscount = this.constructor.getValue(obj.insuranceCompanyDiscount);
        this.insuranceCentreDiscount = this.constructor.getValue(obj.insuranceCentreDiscount);
        this.coupenDiscount = this.constructor.getValue(obj.coupenDiscount);
        this.allDiscount = this.constructor.getValue(obj.allDiscount);
        this.exchangePremium = this.constructor.getValue(obj.exchangePremium);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'buildingUseTypeParamId', realName: 'buildingUseTypeParamId' },
            { name: 'elevatorTypeParamId', realName: 'elevatorTypeParamId' },
            { name: 'floors', realName: 'floors' },
            { name: 'elevatorCapacity', realName: 'elevatorCapacity' },
            { name: 'elevatorCapacityCargo', realName: 'elevatorCapacityCargo' },
            { name: 'defectOrganCoverageId', realName: 'defectOrganCoverageId' },
            { name: 'deathCapitalCoverageId', realName: 'deathCapitalCoverageId' },
            { name: 'financialCoverageId', realName: 'financialCoverageId' },
            { name: 'medicalCostCoverageId', realName: 'medicalCostCoverageId' },
            { name: 'riskLevelDiscountRate', realName: 'riskLevelDiscountRate' },
            { name: 'insuranceRiskLevelId', realName: 'insuranceRiskLevelId' },
            { name: 'discountRate', realName: 'discountRate' },
            { name: 'cityId', realName: 'cityId' },
            { name: 'provinceId', realName: 'provinceId' },
            { name: 'zipCode', realName: 'zipCode' },
            { name: 'addressPlaceBuilding', realName: 'addressPlaceBuilding' },
            { name: 'ownerCoverage', realName: 'ownerCoverage' },
            { name: 'riskLevelDiscount', realName: 'riskLevelDiscount' },
            { name: 'basePremium', realName: 'basePremium' },
            { name: 'allPremium', realName: 'allPremium' },
            { name: 'insuranceCompanyDiscountRate', realName: 'insuranceCompanyDiscountRate' },
            { name: 'insuranceCompanyDiscount', realName: 'insuranceCompanyDiscount' },
            { name: 'insuranceCentreDiscount', realName: 'insuranceCentreDiscount' },
            { name: 'coupenDiscount', realName: 'coupenDiscount' },
            { name: 'allDiscount', realName: 'allDiscount' },
            { name: 'exchangePremium', realName: 'exchangePremium' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ElevatorInsurancePolicyExtendView;
