/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ImageAlbum
 */
class ImageAlbum extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.galleryType = this.constructor.getValue(obj.galleryType);
        this.title = this.constructor.getValue(obj.title);
        this.alt = this.constructor.getValue(obj.alt);
        this.description = this.constructor.getValue(obj.description);
        this.isActive = this.constructor.getValue(obj.isActive);
        this.isMain = this.constructor.getValue(obj.isMain);
        this.isAttachFile = this.constructor.getValue(obj.isAttachFile);
        this.sortPriority = this.constructor.getValue(obj.sortPriority);
        this.createOnPersianDate = this.constructor.getValue(obj.createOnPersianDate);
        this.metaMediaFileId = this.constructor.getValue(obj.metaMediaFileId);
        this.metaMediaFileUrl = this.constructor.getValue(obj.metaMediaFileUrl);
        this.metaMediaFileThumbnailUrl = this.constructor.getValue(obj.metaMediaFileThumbnailUrl);
        this.popupImageGalleryies = this.constructor.getValue(obj.popupImageGalleryies);
        this.galleryDetails = this.constructor.getValue(obj.galleryDetails);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'galleryType', realName: 'galleryType' },
            { name: 'title', realName: 'title' },
            { name: 'alt', realName: 'alt' },
            { name: 'description', realName: 'description' },
            { name: 'isActive', realName: 'isActive' },
            { name: 'isMain', realName: 'isMain' },
            { name: 'isAttachFile', realName: 'isAttachFile' },
            { name: 'sortPriority', realName: 'sortPriority' },
            { name: 'createOnPersianDate', realName: 'createOnPersianDate' },
            { name: 'metaMediaFileId', realName: 'metaMediaFileId' },
            { name: 'metaMediaFileUrl', realName: 'metaMediaFileUrl' },
            { name: 'metaMediaFileThumbnailUrl', realName: 'metaMediaFileThumbnailUrl' },
            {
                name: 'popupImageGalleryies',
                realName: 'popupImageGalleryies',
                array: true,
                type: 'PopupImageGalleryie',
            },
            {
                name: 'galleryDetails',
                realName: 'galleryDetails',
                array: true,
                type: 'GalleryDetail',
            },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ImageAlbum;
