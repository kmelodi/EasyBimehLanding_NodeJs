/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of InsuranceDataTravelInsurance
 */
class InsuranceDataTravelInsurance extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.travelInsurancePolicyExtendView =
          this.constructor.getValue(obj.travelInsurancePolicyExtendView);
        this.travelInsurancePolicyFilter =
          this.constructor.getValue(obj.travelInsurancePolicyFilter);
        this.id = this.constructor.getValue(obj.id);
        this.selectedInsurancePolicyHasBeenChanged =
          this.constructor.getValue(obj.selectedInsurancePolicyHasBeenChanged);
        this.isPaymented = this.constructor.getValue(obj.isPaymented);
        this.payable = this.constructor.getValue(obj.payable);
        this.paymented = this.constructor.getValue(obj.paymented);
        this.conflict = this.constructor.getValue(obj.conflict);
        this.hasConflictDocument = this.constructor.getValue(obj.hasConflictDocument);
        this.initialPrice = this.constructor.getValue(obj.initialPrice);
        this.finalPrice = this.constructor.getValue(obj.finalPrice);
        this.insuranceCompanyName = this.constructor.getValue(obj.insuranceCompanyName);
        this.insuranceCentreName = this.constructor.getValue(obj.insuranceCentreName);
        this.isInsuranceCentreAdmin = this.constructor.getValue(obj.isInsuranceCentreAdmin);
        this.insurancePolicyPaymentDocuments =
          this.constructor.getValue(obj.insurancePolicyPaymentDocuments);
        this.insurancePolicyConflict = this.constructor.getValue(obj.insurancePolicyConflict);
        this.insurancePolicyCondition = this.constructor.getValue(obj.insurancePolicyCondition);
        this.person = this.constructor.getValue(obj.person);
        this.insurancePolicy = this.constructor.getValue(obj.insurancePolicy);
        this.shoppingCard = this.constructor.getValue(obj.shoppingCard);
        this.shoppingCardPostalPacket = this.constructor.getValue(obj.shoppingCardPostalPacket);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            {
                name: 'travelInsurancePolicyExtendView',
                realName: 'travelInsurancePolicyExtendView',
                type: 'TravelInsurancePolicyExtendView',
            },
            {
                name: 'travelInsurancePolicyFilter',
                realName: 'travelInsurancePolicyFilter',
                type: 'TravelInsurancePolicyFilter',
            },
            { name: 'id', realName: 'id' },
            {
                name: 'selectedInsurancePolicyHasBeenChanged',
                realName: 'selectedInsurancePolicyHasBeenChanged',
            },
            { name: 'isPaymented', realName: 'isPaymented' },
            { name: 'payable', realName: 'payable' },
            { name: 'paymented', realName: 'paymented' },
            { name: 'conflict', realName: 'conflict' },
            { name: 'hasConflictDocument', realName: 'hasConflictDocument' },
            { name: 'initialPrice', realName: 'initialPrice' },
            { name: 'finalPrice', realName: 'finalPrice' },
            { name: 'insuranceCompanyName', realName: 'insuranceCompanyName' },
            { name: 'insuranceCentreName', realName: 'insuranceCentreName' },
            { name: 'isInsuranceCentreAdmin', realName: 'isInsuranceCentreAdmin' },
            {
                name: 'insurancePolicyPaymentDocuments',
                realName: 'insurancePolicyPaymentDocuments',
                array: true,
            },
            { name: 'insurancePolicyConflict', realName: 'insurancePolicyConflict' },
            { name: 'insurancePolicyCondition', realName: 'insurancePolicyCondition' },
            { name: 'person', realName: 'person' },
            { name: 'insurancePolicy', realName: 'insurancePolicy' },
            { name: 'shoppingCard', realName: 'shoppingCard' },
            { name: 'shoppingCardPostalPacket', realName: 'shoppingCardPostalPacket' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = InsuranceDataTravelInsurance;
