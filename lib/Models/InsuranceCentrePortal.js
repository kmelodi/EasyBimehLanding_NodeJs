/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of InsuranceCentrePortal
 */
class InsuranceCentrePortal extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.insuranceCentreId = this.constructor.getValue(obj.insuranceCentreId);
        this.centreName = this.constructor.getValue(obj.centreName);
        this.subDomainName = this.constructor.getValue(obj.subDomainName);
        this.title = this.constructor.getValue(obj.title);
        this.subTitle = this.constructor.getValue(obj.subTitle);
        this.contactUs = this.constructor.getValue(obj.contactUs);
        this.aboutUs = this.constructor.getValue(obj.aboutUs);
        this.ourService = this.constructor.getValue(obj.ourService);
        this.termsConditions = this.constructor.getValue(obj.termsConditions);
        this.copyright = this.constructor.getValue(obj.copyright);
        this.headerTitle = this.constructor.getValue(obj.headerTitle);
        this.headerBody = this.constructor.getValue(obj.headerBody);
        this.footerColor = this.constructor.getValue(obj.footerColor);
        this.backgroundColor = this.constructor.getValue(obj.backgroundColor);
        this.licensed = this.constructor.getValue(obj.licensed);
        this.defaultLogo = this.constructor.getValue(obj.defaultLogo);
        this.titleColor = this.constructor.getValue(obj.titleColor);
        this.subTitleColor = this.constructor.getValue(obj.subTitleColor);
        this.eTrustSymbol = this.constructor.getValue(obj.eTrustSymbol);
        this.digitalMediaOrganizerSymbol =
          this.constructor.getValue(obj.digitalMediaOrganizerSymbol);
        this.googlePlus = this.constructor.getValue(obj.googlePlus);
        this.telegram = this.constructor.getValue(obj.telegram);
        this.instagram = this.constructor.getValue(obj.instagram);
        this.faceBook = this.constructor.getValue(obj.faceBook);
        this.twitter = this.constructor.getValue(obj.twitter);
        this.saturdayToWednesdayFromHour =
          this.constructor.getValue(obj.saturdayToWednesdayFromHour);
        this.saturdayToWednesdayToHour = this.constructor.getValue(obj.saturdayToWednesdayToHour);
        this.thursdayFromHour = this.constructor.getValue(obj.thursdayFromHour);
        this.thursdayToHour = this.constructor.getValue(obj.thursdayToHour);
        this.fridayFromHour = this.constructor.getValue(obj.fridayFromHour);
        this.fridayToHour = this.constructor.getValue(obj.fridayToHour);
        this.metaMediaFileHeaderId = this.constructor.getValue(obj.metaMediaFileHeaderId);
        this.metaMediaFileHeaderUrl = this.constructor.getValue(obj.metaMediaFileHeaderUrl);
        this.metaMediaFileLogoId = this.constructor.getValue(obj.metaMediaFileLogoId);
        this.metaMediaFileLogoUrl = this.constructor.getValue(obj.metaMediaFileLogoUrl);
        this.metaMediaFileFaviconId = this.constructor.getValue(obj.metaMediaFileFaviconId);
        this.metaMediaFileFaviconUrl = this.constructor.getValue(obj.metaMediaFileFaviconUrl);
        this.metaMediaFileFooterId = this.constructor.getValue(obj.metaMediaFileFooterId);
        this.metaMediaFileFooterUrl = this.constructor.getValue(obj.metaMediaFileFooterUrl);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
            { name: 'centreName', realName: 'centreName' },
            { name: 'subDomainName', realName: 'subDomainName' },
            { name: 'title', realName: 'title' },
            { name: 'subTitle', realName: 'subTitle' },
            { name: 'contactUs', realName: 'contactUs' },
            { name: 'aboutUs', realName: 'aboutUs' },
            { name: 'ourService', realName: 'ourService' },
            { name: 'termsConditions', realName: 'termsConditions' },
            { name: 'copyright', realName: 'copyright' },
            { name: 'headerTitle', realName: 'headerTitle' },
            { name: 'headerBody', realName: 'headerBody' },
            { name: 'footerColor', realName: 'footerColor' },
            { name: 'backgroundColor', realName: 'backgroundColor' },
            { name: 'licensed', realName: 'licensed' },
            { name: 'defaultLogo', realName: 'defaultLogo' },
            { name: 'titleColor', realName: 'titleColor' },
            { name: 'subTitleColor', realName: 'subTitleColor' },
            { name: 'eTrustSymbol', realName: 'eTrustSymbol' },
            { name: 'digitalMediaOrganizerSymbol', realName: 'digitalMediaOrganizerSymbol' },
            { name: 'googlePlus', realName: 'googlePlus' },
            { name: 'telegram', realName: 'telegram' },
            { name: 'instagram', realName: 'instagram' },
            { name: 'faceBook', realName: 'faceBook' },
            { name: 'twitter', realName: 'twitter' },
            { name: 'saturdayToWednesdayFromHour', realName: 'saturdayToWednesdayFromHour' },
            { name: 'saturdayToWednesdayToHour', realName: 'saturdayToWednesdayToHour' },
            { name: 'thursdayFromHour', realName: 'thursdayFromHour' },
            { name: 'thursdayToHour', realName: 'thursdayToHour' },
            { name: 'fridayFromHour', realName: 'fridayFromHour' },
            { name: 'fridayToHour', realName: 'fridayToHour' },
            { name: 'metaMediaFileHeaderId', realName: 'metaMediaFileHeaderId' },
            { name: 'metaMediaFileHeaderUrl', realName: 'metaMediaFileHeaderUrl' },
            { name: 'metaMediaFileLogoId', realName: 'metaMediaFileLogoId' },
            { name: 'metaMediaFileLogoUrl', realName: 'metaMediaFileLogoUrl' },
            { name: 'metaMediaFileFaviconId', realName: 'metaMediaFileFaviconId' },
            { name: 'metaMediaFileFaviconUrl', realName: 'metaMediaFileFaviconUrl' },
            { name: 'metaMediaFileFooterId', realName: 'metaMediaFileFooterId' },
            { name: 'metaMediaFileFooterUrl', realName: 'metaMediaFileFooterUrl' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = InsuranceCentrePortal;
