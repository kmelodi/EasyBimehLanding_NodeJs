/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of LiabilityDoctorInsurancePolicyExtendView
 */
class LiabilityDoctorInsurancePolicyExtendView extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.liabilityDoctorCoverageRateId =
          this.constructor.getValue(obj.liabilityDoctorCoverageRateId);
        this.activityAreaParamId = this.constructor.getValue(obj.activityAreaParamId);
        this.expertiseParamId = this.constructor.getValue(obj.expertiseParamId);
        this.commitmentCeilingParamId = this.constructor.getValue(obj.commitmentCeilingParamId);
        this.insuranceRiskLevelId = this.constructor.getValue(obj.insuranceRiskLevelId);
        this.currentInsuranceDeadline = this.constructor.getValue(obj.currentInsuranceDeadline);
        this.riskLevelDiscountRate = this.constructor.getValue(obj.riskLevelDiscountRate);
        this.physicalCommitment = this.constructor.getValue(obj.physicalCommitment);
        this.discountRate = this.constructor.getValue(obj.discountRate);
        this.basePremium = this.constructor.getValue(obj.basePremium);
        this.allPremium = this.constructor.getValue(obj.allPremium);
        this.allExtraValues = this.constructor.getValue(obj.allExtraValues);
        this.insuranceCompanyDiscountRate =
          this.constructor.getValue(obj.insuranceCompanyDiscountRate);
        this.allDiscount = this.constructor.getValue(obj.allDiscount);
        this.exchangePremium = this.constructor.getValue(obj.exchangePremium);
        this.doctorName = this.constructor.getValue(obj.doctorName);
        this.medicalSystemNO = this.constructor.getValue(obj.medicalSystemNO);
        this.address = this.constructor.getValue(obj.address);
        this.isResident = this.constructor.getValue(obj.isResident);
        this.isStudent = this.constructor.getValue(obj.isStudent);
        this.hasClinic = this.constructor.getValue(obj.hasClinic);
        this.metaMediaMedicalSystemLicenseId =
          this.constructor.getValue(obj.metaMediaMedicalSystemLicenseId);
        this.metaMediaMedicalSystemLicenseUrl =
          this.constructor.getValue(obj.metaMediaMedicalSystemLicenseUrl);
        this.metaMediaNationalCardId = this.constructor.getValue(obj.metaMediaNationalCardId);
        this.metaMediaNationalCardUrl = this.constructor.getValue(obj.metaMediaNationalCardUrl);
        this.metaMediaCurrentInsurancePolicyId =
          this.constructor.getValue(obj.metaMediaCurrentInsurancePolicyId);
        this.metaMediaCurrentInsurancePolicyUrl =
          this.constructor.getValue(obj.metaMediaCurrentInsurancePolicyUrl);
        this.activityAreaEnumName = this.constructor.getValue(obj.activityAreaEnumName);
        this.activityAreaTitle = this.constructor.getValue(obj.activityAreaTitle);
        this.expertiseTitle = this.constructor.getValue(obj.expertiseTitle);
        this.docterStatusTitle = this.constructor.getValue(obj.docterStatusTitle);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'liabilityDoctorCoverageRateId', realName: 'liabilityDoctorCoverageRateId' },
            { name: 'activityAreaParamId', realName: 'activityAreaParamId' },
            { name: 'expertiseParamId', realName: 'expertiseParamId' },
            { name: 'commitmentCeilingParamId', realName: 'commitmentCeilingParamId' },
            { name: 'insuranceRiskLevelId', realName: 'insuranceRiskLevelId' },
            { name: 'currentInsuranceDeadline', realName: 'currentInsuranceDeadline' },
            { name: 'riskLevelDiscountRate', realName: 'riskLevelDiscountRate' },
            { name: 'physicalCommitment', realName: 'physicalCommitment' },
            { name: 'discountRate', realName: 'discountRate' },
            { name: 'basePremium', realName: 'basePremium' },
            { name: 'allPremium', realName: 'allPremium' },
            { name: 'allExtraValues', realName: 'allExtraValues' },
            { name: 'insuranceCompanyDiscountRate', realName: 'insuranceCompanyDiscountRate' },
            { name: 'allDiscount', realName: 'allDiscount' },
            { name: 'exchangePremium', realName: 'exchangePremium' },
            { name: 'doctorName', realName: 'doctorName' },
            { name: 'medicalSystemNO', realName: 'medicalSystemNO' },
            { name: 'address', realName: 'address' },
            { name: 'isResident', realName: 'isResident' },
            { name: 'isStudent', realName: 'isStudent' },
            { name: 'hasClinic', realName: 'hasClinic' },
            {
                name: 'metaMediaMedicalSystemLicenseId',
                realName: 'metaMediaMedicalSystemLicenseId',
            },
            {
                name: 'metaMediaMedicalSystemLicenseUrl',
                realName: 'metaMediaMedicalSystemLicenseUrl',
            },
            { name: 'metaMediaNationalCardId', realName: 'metaMediaNationalCardId' },
            { name: 'metaMediaNationalCardUrl', realName: 'metaMediaNationalCardUrl' },
            {
                name: 'metaMediaCurrentInsurancePolicyId',
                realName: 'metaMediaCurrentInsurancePolicyId',
            },
            {
                name: 'metaMediaCurrentInsurancePolicyUrl',
                realName: 'metaMediaCurrentInsurancePolicyUrl',
            },
            { name: 'activityAreaEnumName', realName: 'activityAreaEnumName' },
            { name: 'activityAreaTitle', realName: 'activityAreaTitle' },
            { name: 'expertiseTitle', realName: 'expertiseTitle' },
            { name: 'docterStatusTitle', realName: 'docterStatusTitle' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = LiabilityDoctorInsurancePolicyExtendView;
