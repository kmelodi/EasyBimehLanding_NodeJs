/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of ElectronicEquipmentInsurance
 */
class ElectronicEquipmentInsurance extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.hasPlan = this.constructor.getValue(obj.hasPlan);
        this.franchisees = this.constructor.getValue(obj.franchisees);
        this.deviceTypes = this.constructor.getValue(obj.deviceTypes);
        this.deviceBrands = this.constructor.getValue(obj.deviceBrands);
        this.deviceModels = this.constructor.getValue(obj.deviceModels);
        this.insuranceCompanies = this.constructor.getValue(obj.insuranceCompanies);
        this.insuranceExtraCoverage = this.constructor.getValue(obj.insuranceExtraCoverage);
        this.insurancePolicyTerms = this.constructor.getValue(obj.insurancePolicyTerms);
        this.provinces = this.constructor.getValue(obj.provinces);
        this.cities = this.constructor.getValue(obj.cities);
        this.cityRegions = this.constructor.getValue(obj.cityRegions);
        this.shippingTypes = this.constructor.getValue(obj.shippingTypes);
        this.postTypes = this.constructor.getValue(obj.postTypes);
        this.insurancePolicyCondition = this.constructor.getValue(obj.insurancePolicyCondition);
        this.insuranceData = this.constructor.getValue(obj.insuranceData);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'hasPlan', realName: 'hasPlan' },
            { name: 'franchisees', realName: 'franchisees', array: true, type: 'Franchisee' },
            { name: 'deviceTypes', realName: 'deviceTypes', array: true, type: 'DeviceType' },
            { name: 'deviceBrands', realName: 'deviceBrands', array: true },
            { name: 'deviceModels', realName: 'deviceModels', array: true },
            {
                name: 'insuranceCompanies',
                realName: 'insuranceCompanies',
                array: true,
                type: 'InsuranceCompany',
            },
            { name: 'insuranceExtraCoverage', realName: 'insuranceExtraCoverage', array: true },
            {
                name: 'insurancePolicyTerms',
                realName: 'insurancePolicyTerms',
                array: true,
                type: 'InsurancePolicyTerm',
            },
            { name: 'provinces', realName: 'provinces', array: true, type: 'Province' },
            { name: 'cities', realName: 'cities', array: true },
            { name: 'cityRegions', realName: 'cityRegions', array: true },
            { name: 'shippingTypes', realName: 'shippingTypes', array: true, type: 'ShippingType' },
            { name: 'postTypes', realName: 'postTypes', array: true, type: 'PostType' },
            {
                name: 'insurancePolicyCondition',
                realName: 'insurancePolicyCondition',
                type: 'InsurancePolicyCondition',
            },
            { name: 'insuranceData', realName: 'insuranceData', type: 'InsuranceData' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = ElectronicEquipmentInsurance;
