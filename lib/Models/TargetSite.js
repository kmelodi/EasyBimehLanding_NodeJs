/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of TargetSite
 */
class TargetSite extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.name = this.constructor.getValue(obj.name || obj.Name);
        this.assemblyName = this.constructor.getValue(obj.assemblyName || obj.AssemblyName);
        this.className = this.constructor.getValue(obj.className || obj.ClassName);
        this.signature = this.constructor.getValue(obj.signature || obj.Signature);
        this.signature2 = this.constructor.getValue(obj.signature2 || obj.Signature2);
        this.memberType = this.constructor.getValue(obj.memberType || obj.MemberType);
        this.genericArguments =
          this.constructor.getValue(obj.genericArguments
     || obj.GenericArguments);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'name', realName: 'Name' },
            { name: 'assemblyName', realName: 'AssemblyName' },
            { name: 'className', realName: 'ClassName' },
            { name: 'signature', realName: 'Signature' },
            { name: 'signature2', realName: 'Signature2' },
            { name: 'memberType', realName: 'MemberType' },
            { name: 'genericArguments', realName: 'GenericArguments' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = TargetSite;
