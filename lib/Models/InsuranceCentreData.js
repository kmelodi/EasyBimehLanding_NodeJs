/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of InsuranceCentreData
 */
class InsuranceCentreData extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.personId = this.constructor.getValue(obj.personId);
        this.personalityType = this.constructor.getValue(obj.personalityType);
        this.insuranceCentreType = this.constructor.getValue(obj.insuranceCentreType);
        this.registerStatus = this.constructor.getValue(obj.registerStatus);
        this.centerName = this.constructor.getValue(obj.centerName);
        this.centerCode = this.constructor.getValue(obj.centerCode);
        this.branchCount = this.constructor.getValue(obj.branchCount);
        this.registrationNumber = this.constructor.getValue(obj.registrationNumber);
        this.freeUseGoldenPackExpireDate =
          this.constructor.getValue(obj.freeUseGoldenPackExpireDate);
        this.cityId = this.constructor.getValue(obj.cityId);
        this.cashPayment = this.constructor.getValue(obj.cashPayment);
        this.showInEasyBimeh = this.constructor.getValue(obj.showInEasyBimeh);
        this.installmentsPayment = this.constructor.getValue(obj.installmentsPayment);
        this.isInitialApplicant = this.constructor.getValue(obj.isInitialApplicant);
        this.branchsCount = this.constructor.getValue(obj.branchsCount);
        this.employeesCount = this.constructor.getValue(obj.employeesCount);
        this.zoneId = this.constructor.getValue(obj.zoneId);
        this.smsChargingStock = this.constructor.getValue(obj.smsChargingStock);
        this.independentBranch = this.constructor.getValue(obj.independentBranch);
        this.disableReason = this.constructor.getValue(obj.disableReason);
        this.termsConditions = this.constructor.getValue(obj.termsConditions);
        this.disableReasonDescription = this.constructor.getValue(obj.disableReasonDescription);
        this.unlimitedAccount = this.constructor.getValue(obj.unlimitedAccount);
        this.whiteLabel = this.constructor.getValue(obj.whiteLabel);
        this.phone = this.constructor.getValue(obj.phone);
        this.fax = this.constructor.getValue(obj.fax);
        this.address = this.constructor.getValue(obj.address);
        this.zipCode = this.constructor.getValue(obj.zipCode);
        this.email = this.constructor.getValue(obj.email);
        this.paymentUrl = this.constructor.getValue(obj.paymentUrl);
        this.callbackUrl = this.constructor.getValue(obj.callbackUrl);
        this.callbackUrlWhitelabel = this.constructor.getValue(obj.callbackUrlWhitelabel);
        this.webSite = this.constructor.getValue(obj.webSite);
        this.latitude = this.constructor.getValue(obj.latitude);
        this.longitude = this.constructor.getValue(obj.longitude);
        this.isActive = this.constructor.getValue(obj.isActive);
        this.insuranceCentreId = this.constructor.getValue(obj.insuranceCentreId);
        this.cityRegionId = this.constructor.getValue(obj.cityRegionId);
        this.provinceId = this.constructor.getValue(obj.provinceId);
        this.cityName = this.constructor.getValue(obj.cityName);
        this.metaMediaActivityLicenceId = this.constructor.getValue(obj.metaMediaActivityLicenceId);
        this.metaMediaActivityLicenceUrl =
          this.constructor.getValue(obj.metaMediaActivityLicenceUrl);
        this.createOnPersianDate = this.constructor.getValue(obj.createOnPersianDate);
        this.insuranceCompanyId = this.constructor.getValue(obj.insuranceCompanyId);
        this.activePackageId = this.constructor.getValue(obj.activePackageId);
        this.packageActivationLastDate = this.constructor.getValue(obj.packageActivationLastDate);
        this.licenseApiKey = this.constructor.getValue(obj.licenseApiKey);
        this.verifyRequestUrl = this.constructor.getValue(obj.verifyRequestUrl);
        this.onlinePayment = this.constructor.getValue(obj.onlinePayment);
        this.cardToCardPayment = this.constructor.getValue(obj.cardToCardPayment);
        this.bankTransferPayment = this.constructor.getValue(obj.bankTransferPayment);
        this.cashOnDelivery = this.constructor.getValue(obj.cashOnDelivery);
        this.bankTransferSameOnlinePaymentInfo =
          this.constructor.getValue(obj.bankTransferSameOnlinePaymentInfo);
        this.bankParamId = this.constructor.getValue(obj.bankParamId);
        this.accountOwner = this.constructor.getValue(obj.accountOwner);
        this.accountNumber = this.constructor.getValue(obj.accountNumber);
        this.iban = this.constructor.getValue(obj.iban);
        this.cardBankParamId = this.constructor.getValue(obj.cardBankParamId);
        this.cardAccountOwner = this.constructor.getValue(obj.cardAccountOwner);
        this.cardAccountNumber = this.constructor.getValue(obj.cardAccountNumber);
        this.bankTransferParamId = this.constructor.getValue(obj.bankTransferParamId);
        this.bankTransferAccountOwner = this.constructor.getValue(obj.bankTransferAccountOwner);
        this.bankTransferAccountNumber = this.constructor.getValue(obj.bankTransferAccountNumber);
        this.bankTransferIBAN = this.constructor.getValue(obj.bankTransferIBAN);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'personId', realName: 'personId' },
            { name: 'personalityType', realName: 'personalityType' },
            { name: 'insuranceCentreType', realName: 'insuranceCentreType' },
            { name: 'registerStatus', realName: 'registerStatus' },
            { name: 'centerName', realName: 'centerName' },
            { name: 'centerCode', realName: 'centerCode' },
            { name: 'branchCount', realName: 'branchCount' },
            { name: 'registrationNumber', realName: 'registrationNumber' },
            { name: 'freeUseGoldenPackExpireDate', realName: 'freeUseGoldenPackExpireDate' },
            { name: 'cityId', realName: 'cityId' },
            { name: 'cashPayment', realName: 'cashPayment' },
            { name: 'showInEasyBimeh', realName: 'showInEasyBimeh' },
            { name: 'installmentsPayment', realName: 'installmentsPayment' },
            { name: 'isInitialApplicant', realName: 'isInitialApplicant' },
            { name: 'branchsCount', realName: 'branchsCount' },
            { name: 'employeesCount', realName: 'employeesCount' },
            { name: 'zoneId', realName: 'zoneId' },
            { name: 'smsChargingStock', realName: 'smsChargingStock' },
            { name: 'independentBranch', realName: 'independentBranch' },
            { name: 'disableReason', realName: 'disableReason' },
            { name: 'termsConditions', realName: 'termsConditions' },
            { name: 'disableReasonDescription', realName: 'disableReasonDescription' },
            { name: 'unlimitedAccount', realName: 'unlimitedAccount' },
            { name: 'whiteLabel', realName: 'whiteLabel' },
            { name: 'phone', realName: 'phone' },
            { name: 'fax', realName: 'fax' },
            { name: 'address', realName: 'address' },
            { name: 'zipCode', realName: 'zipCode' },
            { name: 'email', realName: 'email' },
            { name: 'paymentUrl', realName: 'paymentUrl' },
            { name: 'callbackUrl', realName: 'callbackUrl' },
            { name: 'callbackUrlWhitelabel', realName: 'callbackUrlWhitelabel' },
            { name: 'webSite', realName: 'webSite' },
            { name: 'latitude', realName: 'latitude' },
            { name: 'longitude', realName: 'longitude' },
            { name: 'isActive', realName: 'isActive' },
            { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
            { name: 'cityRegionId', realName: 'cityRegionId' },
            { name: 'provinceId', realName: 'provinceId' },
            { name: 'cityName', realName: 'cityName' },
            { name: 'metaMediaActivityLicenceId', realName: 'metaMediaActivityLicenceId' },
            { name: 'metaMediaActivityLicenceUrl', realName: 'metaMediaActivityLicenceUrl' },
            { name: 'createOnPersianDate', realName: 'createOnPersianDate' },
            { name: 'insuranceCompanyId', realName: 'insuranceCompanyId', array: true },
            { name: 'activePackageId', realName: 'activePackageId' },
            { name: 'packageActivationLastDate', realName: 'packageActivationLastDate' },
            { name: 'licenseApiKey', realName: 'licenseApiKey' },
            { name: 'verifyRequestUrl', realName: 'verifyRequestUrl' },
            { name: 'onlinePayment', realName: 'onlinePayment' },
            { name: 'cardToCardPayment', realName: 'cardToCardPayment' },
            { name: 'bankTransferPayment', realName: 'bankTransferPayment' },
            { name: 'cashOnDelivery', realName: 'cashOnDelivery' },
            {
                name: 'bankTransferSameOnlinePaymentInfo',
                realName: 'bankTransferSameOnlinePaymentInfo',
            },
            { name: 'bankParamId', realName: 'bankParamId' },
            { name: 'accountOwner', realName: 'accountOwner' },
            { name: 'accountNumber', realName: 'accountNumber' },
            { name: 'iban', realName: 'iban' },
            { name: 'cardBankParamId', realName: 'cardBankParamId' },
            { name: 'cardAccountOwner', realName: 'cardAccountOwner' },
            { name: 'cardAccountNumber', realName: 'cardAccountNumber' },
            { name: 'bankTransferParamId', realName: 'bankTransferParamId' },
            { name: 'bankTransferAccountOwner', realName: 'bankTransferAccountOwner' },
            { name: 'bankTransferAccountNumber', realName: 'bankTransferAccountNumber' },
            { name: 'bankTransferIBAN', realName: 'bankTransferIBAN' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = InsuranceCentreData;
