/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of FireInsurancePolicyExtendView
 */
class FireInsurancePolicyExtendView extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.buildingTypeParamId = this.constructor.getValue(obj.buildingTypeParamId);
        this.skeletonTypeBuildingParamId =
          this.constructor.getValue(obj.skeletonTypeBuildingParamId);
        this.buildingUseTypeParamId = this.constructor.getValue(obj.buildingUseTypeParamId);
        this.unitCount = this.constructor.getValue(obj.unitCount);
        this.everySquareMeterCoverageRateId =
          this.constructor.getValue(obj.everySquareMeterCoverageRateId);
        this.cityId = this.constructor.getValue(obj.cityId);
        this.provinceId = this.constructor.getValue(obj.provinceId);
        this.buildingArea = this.constructor.getValue(obj.buildingArea);
        this.valueOfAppliancesFurnishing =
          this.constructor.getValue(obj.valueOfAppliancesFurnishing);
        this.insuranceCoverageIds =
          this.constructor.getValue(obj.insuranceCoverageIds
     || obj._InsuranceCoverageIds);
        this.onlyAppliancesFurnishings = this.constructor.getValue(obj.onlyAppliancesFurnishings);
        this.insuranceCoveragePrice = this.constructor.getValue(obj.insuranceCoveragePrice);
        this.insurancePolicyCommitmentCeiling =
          this.constructor.getValue(obj.insurancePolicyCommitmentCeiling);
        this.valuePerSquareMeterRate = this.constructor.getValue(obj.valuePerSquareMeterRate);
        this.buildYear = this.constructor.getValue(obj.buildYear);
        this.zipCode = this.constructor.getValue(obj.zipCode);
        this.addressPlaceBuilding = this.constructor.getValue(obj.addressPlaceBuilding);
        this.riskLevelDiscount = this.constructor.getValue(obj.riskLevelDiscount);
        this.basePremium = this.constructor.getValue(obj.basePremium);
        this.allPremium = this.constructor.getValue(obj.allPremium);
        this.insuranceCompanyDiscountRate =
          this.constructor.getValue(obj.insuranceCompanyDiscountRate);
        this.insuranceCompanyDiscount = this.constructor.getValue(obj.insuranceCompanyDiscount);
        this.insuranceCentreDiscount = this.constructor.getValue(obj.insuranceCentreDiscount);
        this.coupenDiscount = this.constructor.getValue(obj.coupenDiscount);
        this.allDiscount = this.constructor.getValue(obj.allDiscount);
        this.exchangePremium = this.constructor.getValue(obj.exchangePremium);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'buildingTypeParamId', realName: 'buildingTypeParamId' },
            { name: 'skeletonTypeBuildingParamId', realName: 'skeletonTypeBuildingParamId' },
            { name: 'buildingUseTypeParamId', realName: 'buildingUseTypeParamId' },
            { name: 'unitCount', realName: 'unitCount' },
            { name: 'everySquareMeterCoverageRateId', realName: 'everySquareMeterCoverageRateId' },
            { name: 'cityId', realName: 'cityId' },
            { name: 'provinceId', realName: 'provinceId' },
            { name: 'buildingArea', realName: 'buildingArea' },
            { name: 'valueOfAppliancesFurnishing', realName: 'valueOfAppliancesFurnishing' },
            { name: 'insuranceCoverageIds', realName: '_InsuranceCoverageIds' },
            { name: 'onlyAppliancesFurnishings', realName: 'onlyAppliancesFurnishings' },
            { name: 'insuranceCoveragePrice', realName: 'insuranceCoveragePrice' },
            {
                name: 'insurancePolicyCommitmentCeiling',
                realName: 'insurancePolicyCommitmentCeiling',
            },
            { name: 'valuePerSquareMeterRate', realName: 'valuePerSquareMeterRate' },
            { name: 'buildYear', realName: 'buildYear' },
            { name: 'zipCode', realName: 'zipCode' },
            { name: 'addressPlaceBuilding', realName: 'addressPlaceBuilding' },
            { name: 'riskLevelDiscount', realName: 'riskLevelDiscount' },
            { name: 'basePremium', realName: 'basePremium' },
            { name: 'allPremium', realName: 'allPremium' },
            { name: 'insuranceCompanyDiscountRate', realName: 'insuranceCompanyDiscountRate' },
            { name: 'insuranceCompanyDiscount', realName: 'insuranceCompanyDiscount' },
            { name: 'insuranceCentreDiscount', realName: 'insuranceCentreDiscount' },
            { name: 'coupenDiscount', realName: 'coupenDiscount' },
            { name: 'allDiscount', realName: 'allDiscount' },
            { name: 'exchangePremium', realName: 'exchangePremium' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = FireInsurancePolicyExtendView;
