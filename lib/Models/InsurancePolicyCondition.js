/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of InsurancePolicyCondition
 */
class InsurancePolicyCondition extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.id = this.constructor.getValue(obj.id);
        this.insuranceCentreId = this.constructor.getValue(obj.insuranceCentreId);
        this.insuranceCompanyPolicyTypeId =
          this.constructor.getValue(obj.insuranceCompanyPolicyTypeId);
        this.displayPriority = this.constructor.getValue(obj.displayPriority);
        this.issueInsurance = this.constructor.getValue(obj.issueInsurance);
        this.damageAssessment = this.constructor.getValue(obj.damageAssessment);
        this.cashPayment = this.constructor.getValue(obj.cashPayment);
        this.installmentsPayment = this.constructor.getValue(obj.installmentsPayment);
        this.prepaymentPercent = this.constructor.getValue(obj.prepaymentPercent);
        this.countInstallmentFrom = this.constructor.getValue(obj.countInstallmentFrom);
        this.countInstallmentTo = this.constructor.getValue(obj.countInstallmentTo);
        this.paymentMethods = this.constructor.getValue(obj.paymentMethods);
        this.promotion = this.constructor.getValue(obj.promotion);
        this.isActive = this.constructor.getValue(obj.isActive);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'id', realName: 'id' },
            { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
            { name: 'insuranceCompanyPolicyTypeId', realName: 'insuranceCompanyPolicyTypeId' },
            { name: 'displayPriority', realName: 'displayPriority' },
            { name: 'issueInsurance', realName: 'issueInsurance' },
            { name: 'damageAssessment', realName: 'damageAssessment' },
            { name: 'cashPayment', realName: 'cashPayment' },
            { name: 'installmentsPayment', realName: 'installmentsPayment' },
            { name: 'prepaymentPercent', realName: 'prepaymentPercent' },
            { name: 'countInstallmentFrom', realName: 'countInstallmentFrom' },
            { name: 'countInstallmentTo', realName: 'countInstallmentTo' },
            { name: 'paymentMethods', realName: 'paymentMethods' },
            { name: 'promotion', realName: 'promotion' },
            { name: 'isActive', realName: 'isActive' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = InsurancePolicyCondition;
