/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of TravelInsurancePolicyExtend
 */
class TravelInsurancePolicyExtend extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.insurancePolicyId = this.constructor.getValue(obj.insurancePolicyId);
        this.travelDurationParam = this.constructor.getValue(obj.travelDurationParam);
        this.passengersCount = this.constructor.getValue(obj.passengersCount);
        this.birthDate = this.constructor.getValue(obj.birthDate);
        this.birthDatePersian = this.constructor.getValue(obj.birthDatePersian);
        this.riskLevelDiscount = this.constructor.getValue(obj.riskLevelDiscount);
        this.basePremium = this.constructor.getValue(obj.basePremium);
        this.allPremium = this.constructor.getValue(obj.allPremium);
        this.insuranceCompanyDiscountRate =
          this.constructor.getValue(obj.insuranceCompanyDiscountRate);
        this.insuranceCompanyDiscount = this.constructor.getValue(obj.insuranceCompanyDiscount);
        this.insuranceCentreDiscount = this.constructor.getValue(obj.insuranceCentreDiscount);
        this.coupenDiscount = this.constructor.getValue(obj.coupenDiscount);
        this.allDiscount = this.constructor.getValue(obj.allDiscount);
        this.exchangePremium = this.constructor.getValue(obj.exchangePremium);
        this.travelRatePlanId = this.constructor.getValue(obj.travelRatePlanId);
        this.planTitle = this.constructor.getValue(obj.planTitle);
        this.travelInsurancePolicyExtendAges =
          this.constructor.getValue(obj.travelInsurancePolicyExtendAges);
        this.travelInsurancePolicyExtendPassengers =
          this.constructor.getValue(obj.travelInsurancePolicyExtendPassengers);
        this.zoneIds = this.constructor.getValue(obj.zoneIds);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'insurancePolicyId', realName: 'insurancePolicyId' },
            { name: 'travelDurationParam', realName: 'travelDurationParam' },
            { name: 'passengersCount', realName: 'passengersCount' },
            { name: 'birthDate', realName: 'birthDate' },
            { name: 'birthDatePersian', realName: 'birthDatePersian' },
            { name: 'riskLevelDiscount', realName: 'riskLevelDiscount' },
            { name: 'basePremium', realName: 'basePremium' },
            { name: 'allPremium', realName: 'allPremium' },
            { name: 'insuranceCompanyDiscountRate', realName: 'insuranceCompanyDiscountRate' },
            { name: 'insuranceCompanyDiscount', realName: 'insuranceCompanyDiscount' },
            { name: 'insuranceCentreDiscount', realName: 'insuranceCentreDiscount' },
            { name: 'coupenDiscount', realName: 'coupenDiscount' },
            { name: 'allDiscount', realName: 'allDiscount' },
            { name: 'exchangePremium', realName: 'exchangePremium' },
            { name: 'travelRatePlanId', realName: 'travelRatePlanId' },
            { name: 'planTitle', realName: 'planTitle' },
            {
                name: 'travelInsurancePolicyExtendAges',
                realName: 'travelInsurancePolicyExtendAges',
            },
            {
                name: 'travelInsurancePolicyExtendPassengers',
                realName: 'travelInsurancePolicyExtendPassengers',
            },
            { name: 'zoneIds', realName: 'zoneIds' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = TravelInsurancePolicyExtend;
