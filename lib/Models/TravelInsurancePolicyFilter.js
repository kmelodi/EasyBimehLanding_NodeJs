/**
 * EasyBimehLandingLib
 *
 * This file was automatically generated by APIMATIC v2.0 ( https://apimatic.io ).
 */

'use strict';

const BaseModel = require('./BaseModel');

/**
 * Creates an instance of TravelInsurancePolicyFilter
 */
class TravelInsurancePolicyFilter extends BaseModel {
    /**
     * @constructor
     * @param   {Object}  obj    The object passed to constructor
     */
    constructor(obj) {
        super(obj);
        if (obj === undefined || obj === null) return;
        this.zoneIds = this.constructor.getValue(obj.zoneIds);
        this.travelRatePlanId = this.constructor.getValue(obj.travelRatePlanId);
        this.travelInsurancePolicyExtendAges =
          this.constructor.getValue(obj.travelInsurancePolicyExtendAges);
        this.travelDurationParam = this.constructor.getValue(obj.travelDurationParam);
        this.birthDatePersian = this.constructor.getValue(obj.birthDatePersian);
        this.insuranceExtraCoverageIds = this.constructor.getValue(obj.insuranceExtraCoverageIds);
        this.policyTermId = this.constructor.getValue(obj.policyTermId);
        this.insuranceCentreSubDomainName =
          this.constructor.getValue(obj.insuranceCentreSubDomainName);
        this.insuranceCentreId = this.constructor.getValue(obj.insuranceCentreId);
        this.insuranceCompanyId = this.constructor.getValue(obj.insuranceCompanyId);
        this.isSearchQuery = this.constructor.getValue(obj.isSearchQuery);
        this.giftCode = this.constructor.getValue(obj.giftCode);
        this.customerUserId = this.constructor.getValue(obj.customerUserId);
    }

    /**
     * Function containing information about the fields of this model
     * @return   {array}   Array of objects containing information about the fields
     */
    static mappingInfo() {
        return super.mappingInfo().concat([
            { name: 'zoneIds', realName: 'zoneIds' },
            { name: 'travelRatePlanId', realName: 'travelRatePlanId' },
            {
                name: 'travelInsurancePolicyExtendAges',
                realName: 'travelInsurancePolicyExtendAges',
            },
            { name: 'travelDurationParam', realName: 'travelDurationParam' },
            { name: 'birthDatePersian', realName: 'birthDatePersian' },
            { name: 'insuranceExtraCoverageIds', realName: 'insuranceExtraCoverageIds' },
            { name: 'policyTermId', realName: 'policyTermId' },
            { name: 'insuranceCentreSubDomainName', realName: 'insuranceCentreSubDomainName' },
            { name: 'insuranceCentreId', realName: 'insuranceCentreId' },
            { name: 'insuranceCompanyId', realName: 'insuranceCompanyId' },
            { name: 'isSearchQuery', realName: 'isSearchQuery' },
            { name: 'giftCode', realName: 'giftCode' },
            { name: 'customerUserId', realName: 'customerUserId' },
        ]);
    }

    /**
     * Function containing information about discriminator values
     * mapped with their corresponding model class names
     *
     * @return   {object}  Object containing Key-Value pairs mapping discriminator
     *                     values with their corresponding model classes
     */
    static discriminatorMap() {
        return {};
    }
}

module.exports = TravelInsurancePolicyFilter;
